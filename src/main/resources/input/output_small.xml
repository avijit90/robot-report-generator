<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190807 10:57:53.474" generator="Robot 3.1.2 (Python 2.7.14 on win32)">
    <suite source="C:\UTF\UTF\UOB_API_Auto" id="s1" name="UOB API Auto">
        <suite source="C:\UTF\UTF\UOB_API_Auto\TestCases" id="s1-s1" name="TestCases">
            <suite source="C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures" id="s1-s1-s1" name="SystemFeatures">
                <suite source="C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases" id="s1-s1-s1-s1"
                       name="Data Phrases">
                    <suite source="C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\POST_Phrase_Save.robot"
                           id="s1-s1-s1-s1-s1" name="POST Phrase Save">
                        <test id="s1-s1-s1-s1-s1-t1" name="Phrase_save_delete">
                            <kw name="APITesting_Create_Session" library="Keywords">
                                <kw name="Create Session" library="RequestsLibrary">
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <arguments>
                                        <arg>${APISESSION}</arg>
                                        <arg>${HOST}</arg>
                                    </arguments>
                                    <assign>
                                        <var>${Resp}</var>
                                    </assign>
                                    <msg timestamp="20190807 10:57:55.630" level="INFO">Creating Session using :
                                        alias=APISESSION, url=http://blrcssfbcc0007:7012/uob_api_head/cust/geb/wsaction,
                                        headers={}, cookies=None, auth=None, timeout=None, proxies=None, verify=False,
                                        debug=0
                                    </msg>
                                    <msg timestamp="20190807 10:57:55.630" level="INFO">${Resp} = &lt;requests.sessions.Session
                                        object at 0x0000000007A7D908&gt;
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:57:55.631"
                                            starttime="20190807 10:57:55.629"></status>
                                </kw>
                                <kw name="Log" library="BuiltIn">
                                    <doc>Logs the given message with the given level.</doc>
                                    <arguments>
                                        <arg>${Resp}</arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:57:55.632" level="INFO">&lt;requests.sessions.Session
                                        object at 0x0000000007A7D908&gt;
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:57:55.633"
                                            starttime="20190807 10:57:55.632"></status>
                                </kw>
                                <status status="PASS" endtime="20190807 10:57:55.633"
                                        starttime="20190807 10:57:55.627"></status>
                            </kw>
                            <kw name="DualControl_ON_NEWCOMP" library="Keywords">
                                <kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
                                    <doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
                                        connect to the database using the map string `db_custom_param_string`.
                                    </doc>
                                    <arguments>
                                        <arg>${DB_API_Module}</arg>
                                        <arg>
                                            db_connect_string="${DBUsername}/${DBPassword}@${DBHost}:${DBPort}/${DBServiceName}"
                                        </arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:57:55.640" level="INFO">Executing : Connect To Database
                                        Using Custom Params :
                                        cx_Oracle.connect(db_api_2.connect("uob_sg/password1@blrcssfbcc0007:1521/UOBDB"))
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:00.941"
                                            starttime="20190807 10:57:55.635"></status>
                                </kw>
                                <kw name="Execute Sql Script" library="DatabaseLibrary">
                                    <doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for
                                        setting the database to a known
                                        state before running your tests, or clearing out your test data after running
                                        each a test. Set optional input
                                        `sansTran` to True to run command without an explicit transaction commit or
                                        rollback.
                                    </doc>
                                    <arguments>
                                        <arg>
                                            ${project_path}\\TestCases\\SystemFeatures\\Common\\DualControl_On_NEWCOMP.sql
                                        </arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:00.947" level="INFO">Executing : Execute SQL Script |
                                        C:\UTF\UTF\UOB_API_Auto\\TestCases\SystemFeatures\Common\DualControl_On_NEWCOMP.sql
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:02.927"
                                            starttime="20190807 10:58:00.944"></status>
                                </kw>
                                <kw name="Disconnect From Database" library="DatabaseLibrary">
                                    <doc>Disconnects from the database.</doc>
                                    <msg timestamp="20190807 10:58:02.929" level="INFO">Executing : Disconnect From
                                        Database
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:03.600"
                                            starttime="20190807 10:58:02.928"></status>
                                </kw>
                                <status status="PASS" endtime="20190807 10:58:03.602"
                                        starttime="20190807 10:57:55.634"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Generate_CusSysF_Token</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=2</arg>
                                </arguments>
                                <kw name="Generate_CusSysF_Token" library="Keywords">
                                    <doc>This keyword will generate the Token using for any System Features action at
                                        Customer portal side
                                    </doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '2'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u'NEWCOMP99'), (u'description',
                                            u'This is a testing of the characters'), (u'text', u'This is a testing of
                                            the string'), (u'phrase_id', u''), (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputFilePath_CSFGenToken}${InputFile_CSFGenToken}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${GenCSFTokenFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:04.003" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:04.004" level="INFO">${GenCSFTokenFile} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"${CountryCode}",
                                            "requesterReferenceNumber":"...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:04.005"
                                                starttime="20190807 10:58:04.003"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:04.006" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:04.007"
                                                starttime="20190807 10:58:04.006"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:04.008" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:04.008"
                                                starttime="20190807 10:58:04.007"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:04.010" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:04.010"
                                                starttime="20190807 10:58:04.009"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:04.011" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:04.011"
                                                starttime="20190807 10:58:04.010"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${GenCSFTokenFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${finalCSFTokenreq}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:04.013" level="INFO">${finalCSFTokenreq} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            ...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:04.013"
                                                starttime="20190807 10:58:04.012"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n The CSF Token Request: ${finalCSFTokenreq}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:04.014"
                                                starttime="20190807 10:58:04.014"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:04.016" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:04.016"
                                                starttime="20190807 10:58:04.015"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${GenerateCSFToken_API}</arg>
                                            <arg>data=${finalCSFTokenreq}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTCSFTokenResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:04.020" level="INFO">Starting new HTTP connection
                                            (1): blrcssfbcc0007
                                        </msg>
                                        <msg timestamp="20190807 10:58:05.046" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/csf/token, data={
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"7 Jul 2015 12:15:17 GMT",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"3665465",
                                            "ssoSessionIdentity":"346",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext":{
                                            "serviceVersionNumber":"1.0",
                                            "serviceCode":"10"
                                            }
                                            }
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:05.049" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.050"
                                                starttime="20190807 10:58:04.017"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:05.055" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.056"
                                                starttime="20190807 10:58:05.052"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Common\\CSF_Token_Response.json
                                            </arg>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:05.064" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.066"
                                                starttime="20190807 10:58:05.058"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Response: \n ${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:05.074"
                                                starttime="20190807 10:58:05.070"></status>
                                    </kw>
                                    <kw name="Should Be Equal As Strings" library="BuiltIn">
                                        <doc>Fails if objects are unequal after converting them to strings.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.status_code}</arg>
                                            <arg>200</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:05.079" level="INFO">Argument types are:
                                            &lt;type 'int'&gt;
                                            &lt;type 'unicode'&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.080"
                                                starttime="20190807 10:58:05.076"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                            <arg>/token</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.086" level="INFO">${CSFTokenValue} =
                                            "coWwLNyjugGqQLcy/ZT1+fT7ftUK1kZual3qfKTyIps="
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.087"
                                                starttime="20190807 10:58:05.083"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.092" level="INFO">${CSFTokenValue} =
                                            coWwLNyjugGqQLcy/ZT1+fT7ftUK1kZual3qfKTyIps=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.093"
                                                starttime="20190807 10:58:05.090"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:05.098" level="INFO">${CSFTokenValue} =
                                            coWwLNyjugGqQLcy/ZT1+fT7ftUK1kZual3qfKTyIps=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.099"
                                                starttime="20190807 10:58:05.096"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Value: ${CSFTokenValue}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:05.104"
                                                starttime="20190807 10:58:05.101"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:05.106"
                                            starttime="20190807 10:58:04.002"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:05.108" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:05.109"
                                        starttime="20190807 10:58:03.604"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Phrase_Save</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=2</arg>
                                </arguments>
                                <kw name="Phrase_Save">
                                    <doc>This keyword would add and save new record in Phrases</doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '2'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u'NEWCOMP99'), (u'description',
                                            u'This is a testing of the characters'), (u'text', u'This is a testing of
                                            the string'), (u'phrase_id', u''), (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputPhrasesFilePath}${Input_PhrasesSave_JSONFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${tempSavePhraseFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.638" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_SavePhrases.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_SavePhrases.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:05.638" level="INFO">${tempSavePhraseFile} = {
                                            "data": {
                                            "abbv_name": "${abbv_name}",
                                            "description": "${description}",
                                            "entity": "${entity}",
                                            "text": "${text}",
                                            "phrase_id": "${phrase_id}"
                                            },
                                            "reAuthParameters": {
                                            "...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.639"
                                                starttime="20190807 10:58:05.637"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.641" level="INFO">${applicationCode} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:05.642"
                                                starttime="20190807 10:58:05.640"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationSubCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationSubCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.643" level="INFO">${applicationSubCode} =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.644"
                                                starttime="20190807 10:58:05.642"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.648" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:05.649"
                                                starttime="20190807 10:58:05.646"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterReferenceNumber]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterReferenceNumber}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.652" level="INFO">${requesterReferenceNumber}
                                            =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.652"
                                                starttime="20190807 10:58:05.650"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.656" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.656"
                                                starttime="20190807 10:58:05.653"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.660" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.660"
                                                starttime="20190807 10:58:05.657"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.662" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.663"
                                                starttime="20190807 10:58:05.662"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[entity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${entity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.666" level="INFO">${entity} = BIBTESTCOM6
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.666"
                                                starttime="20190807 10:58:05.665"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[abbv_name]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${abbv_name}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.669" level="INFO">${abbv_name} = NEWCOMP99
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.670"
                                                starttime="20190807 10:58:05.667"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[description]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${description}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.673" level="INFO">${description} = This is a
                                            testing of the characters
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.674"
                                                starttime="20190807 10:58:05.671"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[text]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${text}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.676" level="INFO">${text} = This is a testing
                                            of the string
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.677"
                                                starttime="20190807 10:58:05.675"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[phrase_id]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${phrase_id}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.679" level="INFO">${phrase_id} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:05.680"
                                                starttime="20190807 10:58:05.677"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.683" level="INFO">${token} =
                                            coWwLNyjugGqQLcy/ZT1+fT7ftUK1kZual3qfKTyIps=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.685"
                                                starttime="20190807 10:58:05.682"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${token}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.689" level="INFO">${token} =
                                            coWwLNyjugGqQLcy/ZT1+fT7ftUK1kZual3qfKTyIps=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.690"
                                                starttime="20190807 10:58:05.688"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${tempSavePhraseFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${Final_PhraseSave_File}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.694" level="INFO">${Final_PhraseSave_File} = {
                                            "data": {
                                            "abbv_name": "NEWCOMP99",
                                            "description": "This is a testing of the characters",
                                            "entity": "BIBTESTCOM6",
                                            "text": "This is a testing of the string",
                                            "phrase_id": ""
                                            ...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.694"
                                                starttime="20190807 10:58:05.692"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n Final Phrases Save Request: ${Final_PhraseSave_File} \n</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:05.698"
                                                starttime="20190807 10:58:05.696"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:05.701" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:05.702"
                                                starttime="20190807 10:58:05.699"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${SavePhrases_API}</arg>
                                            <arg>data=${Final_PhraseSave_File}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTPhraseSaveResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:06.880" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/data/phrases/save, data={
                                            "data": {
                                            "abbv_name": "NEWCOMP99",
                                            "description": "This is a testing of the characters",
                                            "entity": "BIBTESTCOM6",
                                            "text": "This is a testing of the string",
                                            "phrase_id": ""
                                            },
                                            "reAuthParameters": {
                                            "reauth_e2ee_pki": "",
                                            "reauth_e2ee_pubkey": "",
                                            "reauth_e2ee_server_random": "",
                                            "reauth_otp_response": ""
                                            },
                                            "serviceRequestHeader": {
                                            "requesterContext": {
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"",
                                            "ssoSessionIdentity":"",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext": {
                                            "serviceCode": "10",
                                            "serviceVersionNumber": "1.0"
                                            }
                                            },
                                            "token": "coWwLNyjugGqQLcy/ZT1+fT7ftUK1kZual3qfKTyIps="
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:06.881" level="INFO">${POSTPhraseSaveResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:06.881"
                                                starttime="20190807 10:58:05.704"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTPhraseSaveResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:06.884" level="INFO">${POSTPhraseSaveResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:06.884"
                                                starttime="20190807 10:58:06.883"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Data_Phrases\\Output\\Phrases_Save_Response.json
                                            </arg>
                                            <arg>${POSTPhraseSaveResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:06.889" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Output\Phrases_Save_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Output\Phrases_Save_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:06.890"
                                                starttime="20190807 10:58:06.886"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTPhraseSaveResp.content}</arg>
                                            <arg>/serviceResponseHeader/responseContext/responseDescription</arg>
                                        </arguments>
                                        <assign>
                                            <var>${responseDesc}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:06.893" level="INFO">${responseDesc} = "Your data
                                            has been successfully saved in the system."
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:06.894"
                                                starttime="20190807 10:58:06.891"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${responseDesc}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:06.897" level="INFO">${responseDesc} = "Your data
                                            has been successfully saved in the system."
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:06.898"
                                                starttime="20190807 10:58:06.896"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:06.899"
                                            starttime="20190807 10:58:05.636"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:06.900" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:06.901"
                                        starttime="20190807 10:58:05.112"></status>
                            </kw>
                            <kw name="Should Be Equal As Strings" library="BuiltIn">
                                <doc>Fails if objects are unequal after converting them to strings.</doc>
                                <arguments>
                                    <arg>${POSTPhraseSaveResp.status_code}</arg>
                                    <arg>200</arg>
                                </arguments>
                                <msg timestamp="20190807 10:58:06.903" level="INFO">Argument types are:
                                    &lt;type 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:06.903"
                                        starttime="20190807 10:58:06.902"></status>
                            </kw>
                            <kw name="Should Be Equal As Strings" library="BuiltIn">
                                <doc>Fails if objects are unequal after converting them to strings.</doc>
                                <arguments>
                                    <arg>${responseDesc}</arg>
                                    <arg>"Your data has been successfully saved in the system."</arg>
                                </arguments>
                                <status status="PASS" endtime="20190807 10:58:06.906"
                                        starttime="20190807 10:58:06.905"></status>
                            </kw>
                            <kw name="Get Json Value" library="HttpLibraryExtended">
                                <doc>Get the target node of the JSON document `json_string` specified by
                                    `json_pointer`.
                                </doc>
                                <arguments>
                                    <arg>${POSTPhraseSaveResp.content}</arg>
                                    <arg>/feature_id</arg>
                                </arguments>
                                <assign>
                                    <var>${feature_id}</var>
                                </assign>
                                <msg timestamp="20190807 10:58:06.909" level="INFO">${feature_id} = "37320"</msg>
                                <status status="PASS" endtime="20190807 10:58:06.909"
                                        starttime="20190807 10:58:06.907"></status>
                            </kw>
                            <kw name="Set Test Variable" library="BuiltIn">
                                <doc>Makes a variable available everywhere within the scope of the current test.</doc>
                                <arguments>
                                    <arg>${feature_id}</arg>
                                </arguments>
                                <msg timestamp="20190807 10:58:06.911" level="INFO">${feature_id} = "37320"</msg>
                                <status status="PASS" endtime="20190807 10:58:06.911"
                                        starttime="20190807 10:58:06.910"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Generate_CusSysF_Token</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=2</arg>
                                </arguments>
                                <kw name="Generate_CusSysF_Token" library="Keywords">
                                    <doc>This keyword will generate the Token using for any System Features action at
                                        Customer portal side
                                    </doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '2'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u'NEWCOMP99'), (u'description',
                                            u'This is a testing of the characters'), (u'text', u'This is a testing of
                                            the string'), (u'phrase_id', u''), (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputFilePath_CSFGenToken}${InputFile_CSFGenToken}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${GenCSFTokenFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.227" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:07.227" level="INFO">${GenCSFTokenFile} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"${CountryCode}",
                                            "requesterReferenceNumber":"...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.228"
                                                starttime="20190807 10:58:07.226"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.229" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.229"
                                                starttime="20190807 10:58:07.228"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.231" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.231"
                                                starttime="20190807 10:58:07.230"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.232" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.233"
                                                starttime="20190807 10:58:07.232"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.234" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:07.234"
                                                starttime="20190807 10:58:07.233"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${GenCSFTokenFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${finalCSFTokenreq}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.235" level="INFO">${finalCSFTokenreq} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            ...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.236"
                                                starttime="20190807 10:58:07.235"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n The CSF Token Request: ${finalCSFTokenreq}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:07.237"
                                                starttime="20190807 10:58:07.236"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.238" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.238"
                                                starttime="20190807 10:58:07.237"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${GenerateCSFToken_API}</arg>
                                            <arg>data=${finalCSFTokenreq}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTCSFTokenResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.801" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/csf/token, data={
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"7 Jul 2015 12:15:17 GMT",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"3665465",
                                            "ssoSessionIdentity":"346",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext":{
                                            "serviceVersionNumber":"1.0",
                                            "serviceCode":"10"
                                            }
                                            }
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:07.802" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.803"
                                                starttime="20190807 10:58:07.239"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:07.806" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.807"
                                                starttime="20190807 10:58:07.805"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Common\\CSF_Token_Response.json
                                            </arg>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:07.812" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.813"
                                                starttime="20190807 10:58:07.808"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Response: \n ${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:07.816"
                                                starttime="20190807 10:58:07.814"></status>
                                    </kw>
                                    <kw name="Should Be Equal As Strings" library="BuiltIn">
                                        <doc>Fails if objects are unequal after converting them to strings.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.status_code}</arg>
                                            <arg>200</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:07.819" level="INFO">Argument types are:
                                            &lt;type 'int'&gt;
                                            &lt;type 'unicode'&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.820"
                                                starttime="20190807 10:58:07.818"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                            <arg>/token</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.824" level="INFO">${CSFTokenValue} =
                                            "uIvHlJaeRkP1NhzvYPhLzY4jZFuE4UPQBN/X+HHGMpA="
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.824"
                                                starttime="20190807 10:58:07.822"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:07.827" level="INFO">${CSFTokenValue} =
                                            uIvHlJaeRkP1NhzvYPhLzY4jZFuE4UPQBN/X+HHGMpA=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.828"
                                                starttime="20190807 10:58:07.826"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:07.831" level="INFO">${CSFTokenValue} =
                                            uIvHlJaeRkP1NhzvYPhLzY4jZFuE4UPQBN/X+HHGMpA=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:07.832"
                                                starttime="20190807 10:58:07.830"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Value: ${CSFTokenValue}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:07.835"
                                                starttime="20190807 10:58:07.833"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:07.836"
                                            starttime="20190807 10:58:07.224"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:07.837" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:07.837"
                                        starttime="20190807 10:58:06.912"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Phrase_Delete</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=2</arg>
                                </arguments>
                                <kw name="Phrase_Delete">
                                    <doc>This keyword would delete record in Phrases</doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '2'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u'NEWCOMP99'), (u'description',
                                            u'This is a testing of the characters'), (u'text', u'This is a testing of
                                            the string'), (u'phrase_id', u''), (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputPhrasesFilePath}${Input_PhrasesDelete_JSONFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${tempDeletePhraseFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.288" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_DeletePhrases.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_DeletePhrases.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:08.289" level="INFO">${tempDeletePhraseFile} = {
                                            "data": {
                                            "phrase_id": "${phrase_id}"
                                            },
                                            "reAuthParameters": {
                                            "reauth_e2ee_pki": "",
                                            "reauth_e2ee_pubkey": "",
                                            "reauth_e2ee_server_random": "",
                                            "reauth_otp_response": ""
                                            ...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.290"
                                                starttime="20190807 10:58:08.288"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.291" level="INFO">${applicationCode} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:08.292"
                                                starttime="20190807 10:58:08.291"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationSubCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationSubCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.293" level="INFO">${applicationSubCode} =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.293"
                                                starttime="20190807 10:58:08.292"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.295" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:08.295"
                                                starttime="20190807 10:58:08.294"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterReferenceNumber]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterReferenceNumber}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.296" level="INFO">${requesterReferenceNumber}
                                            =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.297"
                                                starttime="20190807 10:58:08.296"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.298" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.298"
                                                starttime="20190807 10:58:08.297"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.300" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.300"
                                                starttime="20190807 10:58:08.299"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.301" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.302"
                                                starttime="20190807 10:58:08.301"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>${feature_id}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${phrase_id}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.303" level="INFO">${phrase_id} = "37320"</msg>
                                        <status status="PASS" endtime="20190807 10:58:08.303"
                                                starttime="20190807 10:58:08.303"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${phrase_id}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${phrase_id}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.305" level="INFO">${phrase_id} = 37320</msg>
                                        <status status="PASS" endtime="20190807 10:58:08.305"
                                                starttime="20190807 10:58:08.304"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.306" level="INFO">${token} =
                                            uIvHlJaeRkP1NhzvYPhLzY4jZFuE4UPQBN/X+HHGMpA=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.306"
                                                starttime="20190807 10:58:08.306"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${token}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.308" level="INFO">${token} =
                                            uIvHlJaeRkP1NhzvYPhLzY4jZFuE4UPQBN/X+HHGMpA=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.308"
                                                starttime="20190807 10:58:08.307"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${tempDeletePhraseFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${Final_PhraseDelete_File}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.309" level="INFO">${Final_PhraseDelete_File} =
                                            {
                                            "data": {
                                            "phrase_id": "37320"
                                            },
                                            "reAuthParameters": {
                                            "reauth_e2ee_pki": "",
                                            "reauth_e2ee_pubkey": "",
                                            "reauth_e2ee_server_random": "",
                                            "reauth_otp_response": ""
                                            },
                                            "...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.310"
                                                starttime="20190807 10:58:08.309"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n Final Save Request: ${Final_PhraseDelete_File} \n</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:08.311"
                                                starttime="20190807 10:58:08.310"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.312" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.313"
                                                starttime="20190807 10:58:08.311"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${DeletePhrases_API}</arg>
                                            <arg>data=${Final_PhraseDelete_File}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTPhraseDeleteResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.890" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/data/phrases/delete, data={
                                            "data": {
                                            "phrase_id": "37320"
                                            },
                                            "reAuthParameters": {
                                            "reauth_e2ee_pki": "",
                                            "reauth_e2ee_pubkey": "",
                                            "reauth_e2ee_server_random": "",
                                            "reauth_otp_response": ""
                                            },
                                            "serviceRequestHeader": {
                                            "requesterContext": {
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"",
                                            "ssoSessionIdentity":"",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext": {
                                            "serviceCode": "10",
                                            "serviceVersionNumber": "1.0"
                                            }
                                            },
                                            "token": "uIvHlJaeRkP1NhzvYPhLzY4jZFuE4UPQBN/X+HHGMpA="
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:08.890" level="INFO">${POSTPhraseDeleteResp} =
                                            &lt;Response [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.891"
                                                starttime="20190807 10:58:08.313"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTPhraseDeleteResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:08.892" level="INFO">${POSTPhraseDeleteResp} =
                                            &lt;Response [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.893"
                                                starttime="20190807 10:58:08.892"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Phrases\\Output\\Phrases_Delete_Response.json
                                            </arg>
                                            <arg>${POSTPhraseDeleteResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:08.896" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Phrases\Output\Phrases_Delete_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Phrases\Output\Phrases_Delete_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.897"
                                                starttime="20190807 10:58:08.893"></status>
                                    </kw>
                                    <kw name="Should Be Equal As Strings" library="BuiltIn">
                                        <doc>Fails if objects are unequal after converting them to strings.</doc>
                                        <arguments>
                                            <arg>${POSTPhraseDeleteResp.status_code}</arg>
                                            <arg>200</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:08.899" level="INFO">Argument types are:
                                            &lt;type 'int'&gt;
                                            &lt;type 'unicode'&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.899"
                                                starttime="20190807 10:58:08.898"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTPhraseDeleteResp.content}</arg>
                                            <arg>/serviceResponseHeader/responseContext/responseDescription</arg>
                                        </arguments>
                                        <assign>
                                            <var>${responseDesc}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:08.901" level="INFO">${responseDesc} = "Your data
                                            has been successfully deleted from the system."
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:08.901"
                                                starttime="20190807 10:58:08.900"></status>
                                    </kw>
                                    <kw name="Should Be Equal As Strings" library="BuiltIn">
                                        <doc>Fails if objects are unequal after converting them to strings.</doc>
                                        <arguments>
                                            <arg>${responseDesc}</arg>
                                            <arg>"Your data has been successfully deleted from the system."</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:08.903"
                                                starttime="20190807 10:58:08.902"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n The Phrase has been deleted successfully.</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:08.904"
                                                starttime="20190807 10:58:08.904"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:08.905"
                                            starttime="20190807 10:58:08.287"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:08.905" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:08.905"
                                        starttime="20190807 10:58:07.839"></status>
                            </kw>
                            <status status="PASS" endtime="20190807 10:58:08.906" critical="yes"
                                    starttime="20190807 10:57:55.625"></status>
                        </test>
                        <test id="s1-s1-s1-s1-s1-t2" name="Phrase_save_Validate_abbv_name">
                            <kw name="APITesting_Create_Session" library="Keywords">
                                <kw name="Create Session" library="RequestsLibrary">
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <arguments>
                                        <arg>${APISESSION}</arg>
                                        <arg>${HOST}</arg>
                                    </arguments>
                                    <assign>
                                        <var>${Resp}</var>
                                    </assign>
                                    <msg timestamp="20190807 10:58:08.911" level="INFO">Creating Session using :
                                        alias=APISESSION, url=http://blrcssfbcc0007:7012/uob_api_head/cust/geb/wsaction,
                                        headers={}, cookies=None, auth=None, timeout=None, proxies=None, verify=False,
                                        debug=0
                                    </msg>
                                    <msg timestamp="20190807 10:58:08.912" level="INFO">${Resp} = &lt;requests.sessions.Session
                                        object at 0x0000000007C96F98&gt;
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:08.912"
                                            starttime="20190807 10:58:08.909"></status>
                                </kw>
                                <kw name="Log" library="BuiltIn">
                                    <doc>Logs the given message with the given level.</doc>
                                    <arguments>
                                        <arg>${Resp}</arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:08.914" level="INFO">&lt;requests.sessions.Session
                                        object at 0x0000000007C96F98&gt;
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:08.914"
                                            starttime="20190807 10:58:08.913"></status>
                                </kw>
                                <status status="PASS" endtime="20190807 10:58:08.915"
                                        starttime="20190807 10:58:08.908"></status>
                            </kw>
                            <kw name="DualControl_ON_NEWCOMP" library="Keywords">
                                <kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
                                    <doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
                                        connect to the database using the map string `db_custom_param_string`.
                                    </doc>
                                    <arguments>
                                        <arg>${DB_API_Module}</arg>
                                        <arg>
                                            db_connect_string="${DBUsername}/${DBPassword}@${DBHost}:${DBPort}/${DBServiceName}"
                                        </arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:08.917" level="INFO">Executing : Connect To Database
                                        Using Custom Params :
                                        cx_Oracle.connect(db_api_2.connect("uob_sg/password1@blrcssfbcc0007:1521/UOBDB"))
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:12.798"
                                            starttime="20190807 10:58:08.916"></status>
                                </kw>
                                <kw name="Execute Sql Script" library="DatabaseLibrary">
                                    <doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for
                                        setting the database to a known
                                        state before running your tests, or clearing out your test data after running
                                        each a test. Set optional input
                                        `sansTran` to True to run command without an explicit transaction commit or
                                        rollback.
                                    </doc>
                                    <arguments>
                                        <arg>
                                            ${project_path}\\TestCases\\SystemFeatures\\Common\\DualControl_On_NEWCOMP.sql
                                        </arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:12.801" level="INFO">Executing : Execute SQL Script |
                                        C:\UTF\UTF\UOB_API_Auto\\TestCases\SystemFeatures\Common\DualControl_On_NEWCOMP.sql
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:14.823"
                                            starttime="20190807 10:58:12.800"></status>
                                </kw>
                                <kw name="Disconnect From Database" library="DatabaseLibrary">
                                    <doc>Disconnects from the database.</doc>
                                    <msg timestamp="20190807 10:58:14.825" level="INFO">Executing : Disconnect From
                                        Database
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:15.478"
                                            starttime="20190807 10:58:14.824"></status>
                                </kw>
                                <status status="PASS" endtime="20190807 10:58:15.479"
                                        starttime="20190807 10:58:08.915"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Generate_CusSysF_Token</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=3</arg>
                                </arguments>
                                <kw name="Generate_CusSysF_Token" library="Keywords">
                                    <doc>This keyword will generate the Token using for any System Features action at
                                        Customer portal side
                                    </doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '3'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u''), (u'description', u'This
                                            is a testing of the characters'), (u'text', u'This is a testing of the
                                            string'), (u'phrase_id', u''), (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputFilePath_CSFGenToken}${InputFile_CSFGenToken}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${GenCSFTokenFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:15.916" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:15.919" level="INFO">${GenCSFTokenFile} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"${CountryCode}",
                                            "requesterReferenceNumber":"...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:15.921"
                                                starttime="20190807 10:58:15.914"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:15.924" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:15.925"
                                                starttime="20190807 10:58:15.922"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:15.927" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:15.928"
                                                starttime="20190807 10:58:15.926"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:15.930" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:15.930"
                                                starttime="20190807 10:58:15.929"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:15.932" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:15.933"
                                                starttime="20190807 10:58:15.931"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${GenCSFTokenFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${finalCSFTokenreq}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:15.935" level="INFO">${finalCSFTokenreq} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            ...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:15.935"
                                                starttime="20190807 10:58:15.934"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n The CSF Token Request: ${finalCSFTokenreq}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:15.937"
                                                starttime="20190807 10:58:15.936"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:15.939" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:15.940"
                                                starttime="20190807 10:58:15.938"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${GenerateCSFToken_API}</arg>
                                            <arg>data=${finalCSFTokenreq}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTCSFTokenResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:15.943" level="INFO">Starting new HTTP connection
                                            (1): blrcssfbcc0007
                                        </msg>
                                        <msg timestamp="20190807 10:58:16.920" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/csf/token, data={
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"7 Jul 2015 12:15:17 GMT",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"3665465",
                                            "ssoSessionIdentity":"346",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext":{
                                            "serviceVersionNumber":"1.0",
                                            "serviceCode":"10"
                                            }
                                            }
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:16.922" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:16.923"
                                                starttime="20190807 10:58:15.941"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:16.929" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:16.930"
                                                starttime="20190807 10:58:16.926"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Common\\CSF_Token_Response.json
                                            </arg>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:16.939" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:16.941"
                                                starttime="20190807 10:58:16.933"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Response: \n ${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:16.947"
                                                starttime="20190807 10:58:16.944"></status>
                                    </kw>
                                    <kw name="Should Be Equal As Strings" library="BuiltIn">
                                        <doc>Fails if objects are unequal after converting them to strings.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.status_code}</arg>
                                            <arg>200</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:16.952" level="INFO">Argument types are:
                                            &lt;type 'int'&gt;
                                            &lt;type 'unicode'&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:16.954"
                                                starttime="20190807 10:58:16.950"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                            <arg>/token</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:16.960" level="INFO">${CSFTokenValue} =
                                            "X8GkTC9EUXs2MJ5On99t4pQXMNPfFnb2HAo51Cc4CTU="
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:16.961"
                                                starttime="20190807 10:58:16.957"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:16.966" level="INFO">${CSFTokenValue} =
                                            X8GkTC9EUXs2MJ5On99t4pQXMNPfFnb2HAo51Cc4CTU=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:16.966"
                                                starttime="20190807 10:58:16.963"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:16.970" level="INFO">${CSFTokenValue} =
                                            X8GkTC9EUXs2MJ5On99t4pQXMNPfFnb2HAo51Cc4CTU=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:16.971"
                                                starttime="20190807 10:58:16.969"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Value: ${CSFTokenValue}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:16.975"
                                                starttime="20190807 10:58:16.973"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:16.976"
                                            starttime="20190807 10:58:15.912"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:16.977" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:16.978"
                                        starttime="20190807 10:58:15.480"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Phrase_Save</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=3</arg>
                                </arguments>
                                <kw name="Phrase_Save">
                                    <doc>This keyword would add and save new record in Phrases</doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '3'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u''), (u'description', u'This
                                            is a testing of the characters'), (u'text', u'This is a testing of the
                                            string'), (u'phrase_id', u''), (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputPhrasesFilePath}${Input_PhrasesSave_JSONFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${tempSavePhraseFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.437" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_SavePhrases.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_SavePhrases.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:17.438" level="INFO">${tempSavePhraseFile} = {
                                            "data": {
                                            "abbv_name": "${abbv_name}",
                                            "description": "${description}",
                                            "entity": "${entity}",
                                            "text": "${text}",
                                            "phrase_id": "${phrase_id}"
                                            },
                                            "reAuthParameters": {
                                            "...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.438"
                                                starttime="20190807 10:58:17.437"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.440" level="INFO">${applicationCode} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:17.440"
                                                starttime="20190807 10:58:17.439"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationSubCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationSubCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.442" level="INFO">${applicationSubCode} =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.442"
                                                starttime="20190807 10:58:17.441"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.443" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:17.444"
                                                starttime="20190807 10:58:17.443"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterReferenceNumber]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterReferenceNumber}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.445" level="INFO">${requesterReferenceNumber}
                                            =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.445"
                                                starttime="20190807 10:58:17.444"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.447" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.447"
                                                starttime="20190807 10:58:17.446"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.448" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.449"
                                                starttime="20190807 10:58:17.448"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.450" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.451"
                                                starttime="20190807 10:58:17.449"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[entity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${entity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.452" level="INFO">${entity} = BIBTESTCOM6
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.452"
                                                starttime="20190807 10:58:17.451"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[abbv_name]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${abbv_name}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.454" level="INFO">${abbv_name} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:17.454"
                                                starttime="20190807 10:58:17.453"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[description]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${description}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.456" level="INFO">${description} = This is a
                                            testing of the characters
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.456"
                                                starttime="20190807 10:58:17.455"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[text]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${text}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.457" level="INFO">${text} = This is a testing
                                            of the string
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.457"
                                                starttime="20190807 10:58:17.457"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[phrase_id]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${phrase_id}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.459" level="INFO">${phrase_id} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:17.459"
                                                starttime="20190807 10:58:17.458"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.460" level="INFO">${token} =
                                            X8GkTC9EUXs2MJ5On99t4pQXMNPfFnb2HAo51Cc4CTU=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.460"
                                                starttime="20190807 10:58:17.459"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${token}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.461" level="INFO">${token} =
                                            X8GkTC9EUXs2MJ5On99t4pQXMNPfFnb2HAo51Cc4CTU=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.462"
                                                starttime="20190807 10:58:17.461"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${tempSavePhraseFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${Final_PhraseSave_File}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.463" level="INFO">${Final_PhraseSave_File} = {
                                            "data": {
                                            "abbv_name": "",
                                            "description": "This is a testing of the characters",
                                            "entity": "BIBTESTCOM6",
                                            "text": "This is a testing of the string",
                                            "phrase_id": ""
                                            },
                                            "reA...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.464"
                                                starttime="20190807 10:58:17.462"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n Final Phrases Save Request: ${Final_PhraseSave_File} \n</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:17.465"
                                                starttime="20190807 10:58:17.464"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:17.466" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:17.467"
                                                starttime="20190807 10:58:17.466"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${SavePhrases_API}</arg>
                                            <arg>data=${Final_PhraseSave_File}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTPhraseSaveResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:18.044" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/data/phrases/save, data={
                                            "data": {
                                            "abbv_name": "",
                                            "description": "This is a testing of the characters",
                                            "entity": "BIBTESTCOM6",
                                            "text": "This is a testing of the string",
                                            "phrase_id": ""
                                            },
                                            "reAuthParameters": {
                                            "reauth_e2ee_pki": "",
                                            "reauth_e2ee_pubkey": "",
                                            "reauth_e2ee_server_random": "",
                                            "reauth_otp_response": ""
                                            },
                                            "serviceRequestHeader": {
                                            "requesterContext": {
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"",
                                            "ssoSessionIdentity":"",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext": {
                                            "serviceCode": "10",
                                            "serviceVersionNumber": "1.0"
                                            }
                                            },
                                            "token": "X8GkTC9EUXs2MJ5On99t4pQXMNPfFnb2HAo51Cc4CTU="
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:18.045" level="INFO">${POSTPhraseSaveResp} = &lt;Response
                                            [500]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:18.046"
                                                starttime="20190807 10:58:17.467"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTPhraseSaveResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:18.053" level="INFO">${POSTPhraseSaveResp} = &lt;Response
                                            [500]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:18.055"
                                                starttime="20190807 10:58:18.050"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Data_Phrases\\Output\\Phrases_Save_Response.json
                                            </arg>
                                            <arg>${POSTPhraseSaveResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:18.064" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Output\Phrases_Save_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Output\Phrases_Save_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:18.066"
                                                starttime="20190807 10:58:18.057"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTPhraseSaveResp.content}</arg>
                                            <arg>/serviceResponseHeader/responseContext/responseDescription</arg>
                                        </arguments>
                                        <assign>
                                            <var>${responseDesc}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:18.070" level="INFO">${responseDesc} = "Following
                                            fields are missing or invalid in the request : data.abbv_name,"
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:18.071"
                                                starttime="20190807 10:58:18.068"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${responseDesc}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:18.074" level="INFO">${responseDesc} = "Following
                                            fields are missing or invalid in the request : data.abbv_name,"
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:18.075"
                                                starttime="20190807 10:58:18.073"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:18.076"
                                            starttime="20190807 10:58:17.435"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:18.078" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:18.079"
                                        starttime="20190807 10:58:16.981"></status>
                            </kw>
                            <kw name="Should Be Equal As Strings" library="BuiltIn">
                                <doc>Fails if objects are unequal after converting them to strings.</doc>
                                <arguments>
                                    <arg>${POSTPhraseSaveResp.status_code}</arg>
                                    <arg>500</arg>
                                </arguments>
                                <msg timestamp="20190807 10:58:18.083" level="INFO">Argument types are:
                                    &lt;type 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:18.084"
                                        starttime="20190807 10:58:18.081"></status>
                            </kw>
                            <kw name="Should Be Equal As Strings" library="BuiltIn">
                                <doc>Fails if objects are unequal after converting them to strings.</doc>
                                <arguments>
                                    <arg>${responseDesc}</arg>
                                    <arg>"Following fields are missing or invalid in the request : data.abbv_name,"
                                    </arg>
                                </arguments>
                                <status status="PASS" endtime="20190807 10:58:18.088"
                                        starttime="20190807 10:58:18.086"></status>
                            </kw>
                            <status status="PASS" endtime="20190807 10:58:18.089" critical="yes"
                                    starttime="20190807 10:58:08.907"></status>
                        </test>
                        <test id="s1-s1-s1-s1-s1-t3" name="Phrase_save_Validate_description">
                            <kw name="APITesting_Create_Session" library="Keywords">
                                <kw name="Create Session" library="RequestsLibrary">
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <arguments>
                                        <arg>${APISESSION}</arg>
                                        <arg>${HOST}</arg>
                                    </arguments>
                                    <assign>
                                        <var>${Resp}</var>
                                    </assign>
                                    <msg timestamp="20190807 10:58:18.099" level="INFO">Creating Session using :
                                        alias=APISESSION, url=http://blrcssfbcc0007:7012/uob_api_head/cust/geb/wsaction,
                                        headers={}, cookies=None, auth=None, timeout=None, proxies=None, verify=False,
                                        debug=0
                                    </msg>
                                    <msg timestamp="20190807 10:58:18.102" level="INFO">${Resp} = &lt;requests.sessions.Session
                                        object at 0x000000000800A0B8&gt;
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:18.103"
                                            starttime="20190807 10:58:18.096"></status>
                                </kw>
                                <kw name="Log" library="BuiltIn">
                                    <doc>Logs the given message with the given level.</doc>
                                    <arguments>
                                        <arg>${Resp}</arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:18.107" level="INFO">&lt;requests.sessions.Session
                                        object at 0x000000000800A0B8&gt;
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:18.108"
                                            starttime="20190807 10:58:18.105"></status>
                                </kw>
                                <status status="PASS" endtime="20190807 10:58:18.110"
                                        starttime="20190807 10:58:18.094"></status>
                            </kw>
                            <kw name="DualControl_ON_NEWCOMP" library="Keywords">
                                <kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
                                    <doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
                                        connect to the database using the map string `db_custom_param_string`.
                                    </doc>
                                    <arguments>
                                        <arg>${DB_API_Module}</arg>
                                        <arg>
                                            db_connect_string="${DBUsername}/${DBPassword}@${DBHost}:${DBPort}/${DBServiceName}"
                                        </arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:18.116" level="INFO">Executing : Connect To Database
                                        Using Custom Params :
                                        cx_Oracle.connect(db_api_2.connect("uob_sg/password1@blrcssfbcc0007:1521/UOBDB"))
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:22.242"
                                            starttime="20190807 10:58:18.114"></status>
                                </kw>
                                <kw name="Execute Sql Script" library="DatabaseLibrary">
                                    <doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for
                                        setting the database to a known
                                        state before running your tests, or clearing out your test data after running
                                        each a test. Set optional input
                                        `sansTran` to True to run command without an explicit transaction commit or
                                        rollback.
                                    </doc>
                                    <arguments>
                                        <arg>
                                            ${project_path}\\TestCases\\SystemFeatures\\Common\\DualControl_On_NEWCOMP.sql
                                        </arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:22.247" level="INFO">Executing : Execute SQL Script |
                                        C:\UTF\UTF\UOB_API_Auto\\TestCases\SystemFeatures\Common\DualControl_On_NEWCOMP.sql
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:24.287"
                                            starttime="20190807 10:58:22.244"></status>
                                </kw>
                                <kw name="Disconnect From Database" library="DatabaseLibrary">
                                    <doc>Disconnects from the database.</doc>
                                    <msg timestamp="20190807 10:58:24.292" level="INFO">Executing : Disconnect From
                                        Database
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:24.900"
                                            starttime="20190807 10:58:24.290"></status>
                                </kw>
                                <status status="PASS" endtime="20190807 10:58:24.902"
                                        starttime="20190807 10:58:18.112"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Generate_CusSysF_Token</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=4</arg>
                                </arguments>
                                <kw name="Generate_CusSysF_Token" library="Keywords">
                                    <doc>This keyword will generate the Token using for any System Features action at
                                        Customer portal side
                                    </doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '4'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u'NEWCOMP99'), (u'description',
                                            u''), (u'text', u'This is a testing of the string'), (u'phrase_id', u''),
                                            (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputFilePath_CSFGenToken}${InputFile_CSFGenToken}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${GenCSFTokenFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:25.487" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:25.488" level="INFO">${GenCSFTokenFile} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"${CountryCode}",
                                            "requesterReferenceNumber":"...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:25.488"
                                                starttime="20190807 10:58:25.486"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:25.489" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:25.490"
                                                starttime="20190807 10:58:25.489"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:25.491" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:25.491"
                                                starttime="20190807 10:58:25.490"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:25.492" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:25.492"
                                                starttime="20190807 10:58:25.492"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:25.494" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:25.494"
                                                starttime="20190807 10:58:25.493"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${GenCSFTokenFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${finalCSFTokenreq}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:25.496" level="INFO">${finalCSFTokenreq} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            ...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:25.496"
                                                starttime="20190807 10:58:25.495"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n The CSF Token Request: ${finalCSFTokenreq}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:25.497"
                                                starttime="20190807 10:58:25.497"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:25.499" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:25.499"
                                                starttime="20190807 10:58:25.498"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${GenerateCSFToken_API}</arg>
                                            <arg>data=${finalCSFTokenreq}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTCSFTokenResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:25.501" level="INFO">Starting new HTTP connection
                                            (1): blrcssfbcc0007
                                        </msg>
                                        <msg timestamp="20190807 10:58:26.542" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/csf/token, data={
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"7 Jul 2015 12:15:17 GMT",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"3665465",
                                            "ssoSessionIdentity":"346",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext":{
                                            "serviceVersionNumber":"1.0",
                                            "serviceCode":"10"
                                            }
                                            }
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:26.544" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.544"
                                                starttime="20190807 10:58:25.500"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:26.547" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.548"
                                                starttime="20190807 10:58:26.546"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Common\\CSF_Token_Response.json
                                            </arg>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:26.552" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.553"
                                                starttime="20190807 10:58:26.549"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Response: \n ${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:26.557"
                                                starttime="20190807 10:58:26.555"></status>
                                    </kw>
                                    <kw name="Should Be Equal As Strings" library="BuiltIn">
                                        <doc>Fails if objects are unequal after converting them to strings.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.status_code}</arg>
                                            <arg>200</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:26.560" level="INFO">Argument types are:
                                            &lt;type 'int'&gt;
                                            &lt;type 'unicode'&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.561"
                                                starttime="20190807 10:58:26.559"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                            <arg>/token</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.564" level="INFO">${CSFTokenValue} =
                                            "0oAAgpJA9yS5+BduIYtisMzSNKg86aCQw7rBl45pyjU="
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.564"
                                                starttime="20190807 10:58:26.562"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.567" level="INFO">${CSFTokenValue} =
                                            0oAAgpJA9yS5+BduIYtisMzSNKg86aCQw7rBl45pyjU=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.567"
                                                starttime="20190807 10:58:26.565"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:26.569" level="INFO">${CSFTokenValue} =
                                            0oAAgpJA9yS5+BduIYtisMzSNKg86aCQw7rBl45pyjU=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.569"
                                                starttime="20190807 10:58:26.568"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Value: ${CSFTokenValue}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:26.571"
                                                starttime="20190807 10:58:26.570"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:26.571"
                                            starttime="20190807 10:58:25.485"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:26.571" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:26.573"
                                        starttime="20190807 10:58:24.904"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Phrase_Save</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=4</arg>
                                </arguments>
                                <kw name="Phrase_Save">
                                    <doc>This keyword would add and save new record in Phrases</doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '4'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u'NEWCOMP99'), (u'description',
                                            u''), (u'text', u'This is a testing of the string'), (u'phrase_id', u''),
                                            (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputPhrasesFilePath}${Input_PhrasesSave_JSONFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${tempSavePhraseFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.915" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_SavePhrases.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_SavePhrases.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:26.916" level="INFO">${tempSavePhraseFile} = {
                                            "data": {
                                            "abbv_name": "${abbv_name}",
                                            "description": "${description}",
                                            "entity": "${entity}",
                                            "text": "${text}",
                                            "phrase_id": "${phrase_id}"
                                            },
                                            "reAuthParameters": {
                                            "...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.917"
                                                starttime="20190807 10:58:26.915"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.919" level="INFO">${applicationCode} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:26.919"
                                                starttime="20190807 10:58:26.918"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationSubCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationSubCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.921" level="INFO">${applicationSubCode} =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.921"
                                                starttime="20190807 10:58:26.920"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.922" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:26.923"
                                                starttime="20190807 10:58:26.922"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterReferenceNumber]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterReferenceNumber}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.924" level="INFO">${requesterReferenceNumber}
                                            =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.924"
                                                starttime="20190807 10:58:26.923"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.926" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.926"
                                                starttime="20190807 10:58:26.925"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.927" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.928"
                                                starttime="20190807 10:58:26.926"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.929" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.929"
                                                starttime="20190807 10:58:26.928"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[entity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${entity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.931" level="INFO">${entity} = BIBTESTCOM6
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.931"
                                                starttime="20190807 10:58:26.930"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[abbv_name]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${abbv_name}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.932" level="INFO">${abbv_name} = NEWCOMP99
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.933"
                                                starttime="20190807 10:58:26.932"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[description]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${description}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.934" level="INFO">${description} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:26.934"
                                                starttime="20190807 10:58:26.933"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[text]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${text}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.935" level="INFO">${text} = This is a testing
                                            of the string
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.936"
                                                starttime="20190807 10:58:26.935"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[phrase_id]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${phrase_id}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.937" level="INFO">${phrase_id} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:26.937"
                                                starttime="20190807 10:58:26.936"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.938" level="INFO">${token} =
                                            0oAAgpJA9yS5+BduIYtisMzSNKg86aCQw7rBl45pyjU=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.939"
                                                starttime="20190807 10:58:26.938"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${token}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.940" level="INFO">${token} =
                                            0oAAgpJA9yS5+BduIYtisMzSNKg86aCQw7rBl45pyjU=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.940"
                                                starttime="20190807 10:58:26.939"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${tempSavePhraseFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${Final_PhraseSave_File}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.942" level="INFO">${Final_PhraseSave_File} = {
                                            "data": {
                                            "abbv_name": "NEWCOMP99",
                                            "description": "",
                                            "entity": "BIBTESTCOM6",
                                            "text": "This is a testing of the string",
                                            "phrase_id": ""
                                            },
                                            "reAuthParameters": {
                                            "rea...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.942"
                                                starttime="20190807 10:58:26.941"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n Final Phrases Save Request: ${Final_PhraseSave_File} \n</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:26.943"
                                                starttime="20190807 10:58:26.943"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:26.944" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:26.945"
                                                starttime="20190807 10:58:26.944"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${SavePhrases_API}</arg>
                                            <arg>data=${Final_PhraseSave_File}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTPhraseSaveResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:27.464" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/data/phrases/save, data={
                                            "data": {
                                            "abbv_name": "NEWCOMP99",
                                            "description": "",
                                            "entity": "BIBTESTCOM6",
                                            "text": "This is a testing of the string",
                                            "phrase_id": ""
                                            },
                                            "reAuthParameters": {
                                            "reauth_e2ee_pki": "",
                                            "reauth_e2ee_pubkey": "",
                                            "reauth_e2ee_server_random": "",
                                            "reauth_otp_response": ""
                                            },
                                            "serviceRequestHeader": {
                                            "requesterContext": {
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"",
                                            "ssoSessionIdentity":"",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext": {
                                            "serviceCode": "10",
                                            "serviceVersionNumber": "1.0"
                                            }
                                            },
                                            "token": "0oAAgpJA9yS5+BduIYtisMzSNKg86aCQw7rBl45pyjU="
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:27.466" level="INFO">${POSTPhraseSaveResp} = &lt;Response
                                            [500]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:27.467"
                                                starttime="20190807 10:58:26.945"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTPhraseSaveResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:27.472" level="INFO">${POSTPhraseSaveResp} = &lt;Response
                                            [500]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:27.473"
                                                starttime="20190807 10:58:27.469"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Data_Phrases\\Output\\Phrases_Save_Response.json
                                            </arg>
                                            <arg>${POSTPhraseSaveResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:27.481" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Output\Phrases_Save_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Output\Phrases_Save_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:27.482"
                                                starttime="20190807 10:58:27.475"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTPhraseSaveResp.content}</arg>
                                            <arg>/serviceResponseHeader/responseContext/responseDescription</arg>
                                        </arguments>
                                        <assign>
                                            <var>${responseDesc}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:27.489" level="INFO">${responseDesc} = "Following
                                            fields are missing or invalid in the request : data.description,"
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:27.490"
                                                starttime="20190807 10:58:27.487"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${responseDesc}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:27.494" level="INFO">${responseDesc} = "Following
                                            fields are missing or invalid in the request : data.description,"
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:27.495"
                                                starttime="20190807 10:58:27.492"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:27.497"
                                            starttime="20190807 10:58:26.914"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:27.498" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:27.499"
                                        starttime="20190807 10:58:26.574"></status>
                            </kw>
                            <kw name="Should Be Equal As Strings" library="BuiltIn">
                                <doc>Fails if objects are unequal after converting them to strings.</doc>
                                <arguments>
                                    <arg>${POSTPhraseSaveResp.status_code}</arg>
                                    <arg>500</arg>
                                </arguments>
                                <msg timestamp="20190807 10:58:27.504" level="INFO">Argument types are:
                                    &lt;type 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:27.506"
                                        starttime="20190807 10:58:27.501"></status>
                            </kw>
                            <kw name="Should Be Equal As Strings" library="BuiltIn">
                                <doc>Fails if objects are unequal after converting them to strings.</doc>
                                <arguments>
                                    <arg>${responseDesc}</arg>
                                    <arg>"Following fields are missing or invalid in the request : data.description,"
                                    </arg>
                                </arguments>
                                <status status="PASS" endtime="20190807 10:58:27.511"
                                        starttime="20190807 10:58:27.509"></status>
                            </kw>
                            <status status="PASS" endtime="20190807 10:58:27.513" critical="yes"
                                    starttime="20190807 10:58:18.091"></status>
                        </test>
                        <test id="s1-s1-s1-s1-s1-t4" name="Phrase_save_Validate_text">
                            <kw name="APITesting_Create_Session" library="Keywords">
                                <kw name="Create Session" library="RequestsLibrary">
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <arguments>
                                        <arg>${APISESSION}</arg>
                                        <arg>${HOST}</arg>
                                    </arguments>
                                    <assign>
                                        <var>${Resp}</var>
                                    </assign>
                                    <msg timestamp="20190807 10:58:27.528" level="INFO">Creating Session using :
                                        alias=APISESSION, url=http://blrcssfbcc0007:7012/uob_api_head/cust/geb/wsaction,
                                        headers={}, cookies=None, auth=None, timeout=None, proxies=None, verify=False,
                                        debug=0
                                    </msg>
                                    <msg timestamp="20190807 10:58:27.531" level="INFO">${Resp} = &lt;requests.sessions.Session
                                        object at 0x0000000007D3A3C8&gt;
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:27.532"
                                            starttime="20190807 10:58:27.525"></status>
                                </kw>
                                <kw name="Log" library="BuiltIn">
                                    <doc>Logs the given message with the given level.</doc>
                                    <arguments>
                                        <arg>${Resp}</arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:27.536" level="INFO">&lt;requests.sessions.Session
                                        object at 0x0000000007D3A3C8&gt;
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:27.537"
                                            starttime="20190807 10:58:27.534"></status>
                                </kw>
                                <status status="PASS" endtime="20190807 10:58:27.538"
                                        starttime="20190807 10:58:27.521"></status>
                            </kw>
                            <kw name="DualControl_ON_NEWCOMP" library="Keywords">
                                <kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
                                    <doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
                                        connect to the database using the map string `db_custom_param_string`.
                                    </doc>
                                    <arguments>
                                        <arg>${DB_API_Module}</arg>
                                        <arg>
                                            db_connect_string="${DBUsername}/${DBPassword}@${DBHost}:${DBPort}/${DBServiceName}"
                                        </arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:27.547" level="INFO">Executing : Connect To Database
                                        Using Custom Params :
                                        cx_Oracle.connect(db_api_2.connect("uob_sg/password1@blrcssfbcc0007:1521/UOBDB"))
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:31.539"
                                            starttime="20190807 10:58:27.542"></status>
                                </kw>
                                <kw name="Execute Sql Script" library="DatabaseLibrary">
                                    <doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for
                                        setting the database to a known
                                        state before running your tests, or clearing out your test data after running
                                        each a test. Set optional input
                                        `sansTran` to True to run command without an explicit transaction commit or
                                        rollback.
                                    </doc>
                                    <arguments>
                                        <arg>
                                            ${project_path}\\TestCases\\SystemFeatures\\Common\\DualControl_On_NEWCOMP.sql
                                        </arg>
                                    </arguments>
                                    <msg timestamp="20190807 10:58:31.544" level="INFO">Executing : Execute SQL Script |
                                        C:\UTF\UTF\UOB_API_Auto\\TestCases\SystemFeatures\Common\DualControl_On_NEWCOMP.sql
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:33.600"
                                            starttime="20190807 10:58:31.542"></status>
                                </kw>
                                <kw name="Disconnect From Database" library="DatabaseLibrary">
                                    <doc>Disconnects from the database.</doc>
                                    <msg timestamp="20190807 10:58:33.603" level="INFO">Executing : Disconnect From
                                        Database
                                    </msg>
                                    <status status="PASS" endtime="20190807 10:58:34.165"
                                            starttime="20190807 10:58:33.602"></status>
                                </kw>
                                <status status="PASS" endtime="20190807 10:58:34.166"
                                        starttime="20190807 10:58:27.540"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Generate_CusSysF_Token</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=5</arg>
                                </arguments>
                                <kw name="Generate_CusSysF_Token" library="Keywords">
                                    <doc>This keyword will generate the Token using for any System Features action at
                                        Customer portal side
                                    </doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '5'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u'NEWCOMP99'), (u'description',
                                            u'This is a testing of the characters'), (u'text', u''), (u'phrase_id',
                                            u''), (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputFilePath_CSFGenToken}${InputFile_CSFGenToken}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${GenCSFTokenFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:34.572" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\Post_GenerateCSFToken.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:34.573" level="INFO">${GenCSFTokenFile} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"${CountryCode}",
                                            "requesterReferenceNumber":"...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:34.574"
                                                starttime="20190807 10:58:34.571"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:34.576" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:34.577"
                                                starttime="20190807 10:58:34.575"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:34.579" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:34.580"
                                                starttime="20190807 10:58:34.578"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:34.581" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:34.581"
                                                starttime="20190807 10:58:34.580"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:34.583" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:34.583"
                                                starttime="20190807 10:58:34.582"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${GenCSFTokenFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${finalCSFTokenreq}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:34.585" level="INFO">${finalCSFTokenreq} = {
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            ...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:34.586"
                                                starttime="20190807 10:58:34.584"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n The CSF Token Request: ${finalCSFTokenreq}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:34.587"
                                                starttime="20190807 10:58:34.586"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:34.589" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:34.589"
                                                starttime="20190807 10:58:34.588"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${GenerateCSFToken_API}</arg>
                                            <arg>data=${finalCSFTokenreq}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTCSFTokenResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:34.591" level="INFO">Starting new HTTP connection
                                            (1): blrcssfbcc0007
                                        </msg>
                                        <msg timestamp="20190807 10:58:35.808" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/csf/token, data={
                                            "serviceRequestHeader":{
                                            "requesterContext":{
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"7 Jul 2015 12:15:17 GMT",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"3665465",
                                            "ssoSessionIdentity":"346",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext":{
                                            "serviceVersionNumber":"1.0",
                                            "serviceCode":"10"
                                            }
                                            }
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:35.808" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:35.808"
                                                starttime="20190807 10:58:34.590"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:35.811" level="INFO">${POSTCSFTokenResp} = &lt;Response
                                            [200]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:35.811"
                                                starttime="20190807 10:58:35.810"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Common\\CSF_Token_Response.json
                                            </arg>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:35.813" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Common\CSF_Token_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:35.814"
                                                starttime="20190807 10:58:35.812"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Response: \n ${POSTCSFTokenResp.content}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:35.815"
                                                starttime="20190807 10:58:35.814"></status>
                                    </kw>
                                    <kw name="Should Be Equal As Strings" library="BuiltIn">
                                        <doc>Fails if objects are unequal after converting them to strings.</doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.status_code}</arg>
                                            <arg>200</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:35.818" level="INFO">Argument types are:
                                            &lt;type 'int'&gt;
                                            &lt;type 'unicode'&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:35.819"
                                                starttime="20190807 10:58:35.816"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTCSFTokenResp.content}</arg>
                                            <arg>/token</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:35.820" level="INFO">${CSFTokenValue} =
                                            "DniwI/7jlup8sUn6oKfzLlMZHJ5lqJ1x65G3nlxAd/g="
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:35.821"
                                                starttime="20190807 10:58:35.820"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${CSFTokenValue}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:35.823" level="INFO">${CSFTokenValue} =
                                            DniwI/7jlup8sUn6oKfzLlMZHJ5lqJ1x65G3nlxAd/g=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:35.823"
                                                starttime="20190807 10:58:35.822"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:35.825" level="INFO">${CSFTokenValue} =
                                            DniwI/7jlup8sUn6oKfzLlMZHJ5lqJ1x65G3nlxAd/g=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:35.825"
                                                starttime="20190807 10:58:35.824"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n CSF Token Value: ${CSFTokenValue}</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:35.827"
                                                starttime="20190807 10:58:35.826"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:35.827"
                                            starttime="20190807 10:58:34.569"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:35.828" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:35.828"
                                        starttime="20190807 10:58:34.166"></status>
                            </kw>
                            <kw name="Mx Execute Template With Multiple Data" library="GenericLib">
                                <doc>| Usage |
                                    This keyword is used to run template with multiple data.
                                </doc>
                                <arguments>
                                    <arg>Phrase_Save</arg>
                                    <arg>${DataSetFile}</arg>
                                    <arg>sheetName=Phrases</arg>
                                    <arg>datarow=5</arg>
                                </arguments>
                                <kw name="Phrase_Save">
                                    <doc>This keyword would add and save new record in Phrases</doc>
                                    <arguments>
                                        <arg>OrderedDict([('rowid', '5'), (u'groupIdentity', u'1620'),
                                            (u'requesterGroupIdentity', u'1620'), (u'user_id', u'28623'),
                                            (u'userIdentity', u'28623'), (u'requesterUserIdentity', u'28623'),
                                            (u'countryCode', u'SG'), (u'requesterAbbreviatedGroupName', u'NEWCOMP'),
                                            (u'Password', u'password1'), (u'myToken', u'1000000007'),
                                            (u'requesterIpAddress', u'10.242.8.202'), (u'accountCurrency', u'SGD'),
                                            (u'currency', u'SGD'), (u'accountType', u'CC'), (u'accountNumber',
                                            u'3523020941'), (u'entity', u'BIBTESTCOM6'), (u'applicationCode', u''),
                                            (u'applicationSubCode', u''), (u'abbv_name', u'NEWCOMP99'), (u'description',
                                            u'This is a testing of the characters'), (u'text', u''), (u'phrase_id',
                                            u''), (u'requesterReferenceNumber', u'')])
                                        </arg>
                                    </arguments>
                                    <kw name="Get File" library="OperatingSystem">
                                        <doc>Returns the contents of a specified file.</doc>
                                        <arguments>
                                            <arg>${InputPhrasesFilePath}${Input_PhrasesSave_JSONFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${tempSavePhraseFile}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.207" html="yes" level="INFO">Getting file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_SavePhrases.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Input\Post_SavePhrases.json&lt;/a&gt;'.
                                        </msg>
                                        <msg timestamp="20190807 10:58:36.208" level="INFO">${tempSavePhraseFile} = {
                                            "data": {
                                            "abbv_name": "${abbv_name}",
                                            "description": "${description}",
                                            "entity": "${entity}",
                                            "text": "${text}",
                                            "phrase_id": "${phrase_id}"
                                            },
                                            "reAuthParameters": {
                                            "...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.208"
                                                starttime="20190807 10:58:36.206"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.210" level="INFO">${applicationCode} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:36.210"
                                                starttime="20190807 10:58:36.209"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[applicationSubCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${applicationSubCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.211" level="INFO">${applicationSubCode} =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.212"
                                                starttime="20190807 10:58:36.211"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[countryCode]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${countryCode}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.213" level="INFO">${countryCode} = SG</msg>
                                        <status status="PASS" endtime="20190807 10:58:36.214"
                                                starttime="20190807 10:58:36.213"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterReferenceNumber]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterReferenceNumber}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.215" level="INFO">${requesterReferenceNumber}
                                            =
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.215"
                                                starttime="20190807 10:58:36.214"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterUserIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterUserIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.217" level="INFO">${requesterUserIdentity} =
                                            28623
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.217"
                                                starttime="20190807 10:58:36.216"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterGroupIdentity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterGroupIdentity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.218" level="INFO">${requesterGroupIdentity} =
                                            1620
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.219"
                                                starttime="20190807 10:58:36.217"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[requesterAbbreviatedGroupName]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${requesterAbbreviatedGroupName}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.220" level="INFO">
                                            ${requesterAbbreviatedGroupName} = NEWCOMP
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.220"
                                                starttime="20190807 10:58:36.219"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[entity]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${entity}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.222" level="INFO">${entity} = BIBTESTCOM6
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.222"
                                                starttime="20190807 10:58:36.221"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[abbv_name]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${abbv_name}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.223" level="INFO">${abbv_name} = NEWCOMP99
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.223"
                                                starttime="20190807 10:58:36.222"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[description]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${description}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.224" level="INFO">${description} = This is a
                                            testing of the characters
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.225"
                                                starttime="20190807 10:58:36.224"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[text]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${text}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.226" level="INFO">${text} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:36.226"
                                                starttime="20190807 10:58:36.225"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>&amp;{AllData}[phrase_id]</arg>
                                        </arguments>
                                        <assign>
                                            <var>${phrase_id}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.228" level="INFO">${phrase_id} =</msg>
                                        <status status="PASS" endtime="20190807 10:58:36.228"
                                                starttime="20190807 10:58:36.227"></status>
                                    </kw>
                                    <kw name="Set Variable" library="BuiltIn">
                                        <doc>Returns the given values which can then be assigned to a variables.</doc>
                                        <arguments>
                                            <arg>${CSFTokenValue}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.229" level="INFO">${token} =
                                            DniwI/7jlup8sUn6oKfzLlMZHJ5lqJ1x65G3nlxAd/g=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.229"
                                                starttime="20190807 10:58:36.228"></status>
                                    </kw>
                                    <kw name="Replace String" library="String">
                                        <doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.
                                        </doc>
                                        <arguments>
                                            <arg>${token}</arg>
                                            <arg>"</arg>
                                            <arg>${Empty}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${token}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.230" level="INFO">${token} =
                                            DniwI/7jlup8sUn6oKfzLlMZHJ5lqJ1x65G3nlxAd/g=
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.231"
                                                starttime="20190807 10:58:36.230"></status>
                                    </kw>
                                    <kw name="Replace Variables" library="BuiltIn">
                                        <doc>Replaces variables in the given text with their current values.</doc>
                                        <arguments>
                                            <arg>${tempSavePhraseFile}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${Final_PhraseSave_File}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.232" level="INFO">${Final_PhraseSave_File} = {
                                            "data": {
                                            "abbv_name": "NEWCOMP99",
                                            "description": "This is a testing of the characters",
                                            "entity": "BIBTESTCOM6",
                                            "text": "",
                                            "phrase_id": ""
                                            },
                                            "reAuthParameters": {
                                            ...
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.233"
                                                starttime="20190807 10:58:36.231"></status>
                                    </kw>
                                    <kw name="Log To Console" library="BuiltIn">
                                        <doc>Logs the given message to the console.</doc>
                                        <arguments>
                                            <arg>\n Final Phrases Save Request: ${Final_PhraseSave_File} \n</arg>
                                        </arguments>
                                        <status status="PASS" endtime="20190807 10:58:36.234"
                                                starttime="20190807 10:58:36.233"></status>
                                    </kw>
                                    <kw name="Create Dictionary" library="BuiltIn">
                                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                                        <arguments>
                                            <arg>Content-Type=application/json; charset=utf-8</arg>
                                        </arguments>
                                        <assign>
                                            <var>&amp;{headers}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.235" level="INFO">&amp;{headers} = {
                                            Content-Type=application/json; charset=utf-8 }
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.235"
                                                starttime="20190807 10:58:36.234"></status>
                                    </kw>
                                    <kw name="Post Request" library="RequestsLibrary">
                                        <doc>Send a POST request on the session object found using the
                                            given `alias`
                                        </doc>
                                        <arguments>
                                            <arg>${APISESSION}</arg>
                                            <arg>${SavePhrases_API}</arg>
                                            <arg>data=${Final_PhraseSave_File}</arg>
                                            <arg>headers=${headers}</arg>
                                        </arguments>
                                        <assign>
                                            <var>${POSTPhraseSaveResp}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.786" level="INFO">Post Request using :
                                            alias=APISESSION, uri=/data/phrases/save, data={
                                            "data": {
                                            "abbv_name": "NEWCOMP99",
                                            "description": "This is a testing of the characters",
                                            "entity": "BIBTESTCOM6",
                                            "text": "",
                                            "phrase_id": ""
                                            },
                                            "reAuthParameters": {
                                            "reauth_e2ee_pki": "",
                                            "reauth_e2ee_pubkey": "",
                                            "reauth_e2ee_server_random": "",
                                            "reauth_otp_response": ""
                                            },
                                            "serviceRequestHeader": {
                                            "requesterContext": {
                                            "applicationCode":"",
                                            "applicationSubCode":"",
                                            "countryCode":"SG",
                                            "requesterReferenceNumber":"",
                                            "requestTimeInGMT":"",
                                            "requesterUserIdentity":"28623",
                                            "requesterGroupIdentity":"1620",
                                            "sessionIdentity":"",
                                            "ssoSessionIdentity":"",
                                            "requesterAbbreviatedGroupName":"NEWCOMP"
                                            },
                                            "serviceContext": {
                                            "serviceCode": "10",
                                            "serviceVersionNumber": "1.0"
                                            }
                                            },
                                            "token": "DniwI/7jlup8sUn6oKfzLlMZHJ5lqJ1x65G3nlxAd/g="
                                            }, headers={u'Content-Type': u'application/json; charset=utf-8'},
                                            files=None, allow_redirects=True
                                        </msg>
                                        <msg timestamp="20190807 10:58:36.787" level="INFO">${POSTPhraseSaveResp} = &lt;Response
                                            [500]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.788"
                                                starttime="20190807 10:58:36.236"></status>
                                    </kw>
                                    <kw name="Set Global Variable" library="BuiltIn">
                                        <doc>Makes a variable available globally in all tests and suites.</doc>
                                        <arguments>
                                            <arg>${POSTPhraseSaveResp}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:36.791" level="INFO">${POSTPhraseSaveResp} = &lt;Response
                                            [500]&gt;
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.791"
                                                starttime="20190807 10:58:36.789"></status>
                                    </kw>
                                    <kw name="Create File" library="OperatingSystem">
                                        <doc>Creates a file with the given content and encoding.</doc>
                                        <arguments>
                                            <arg>
                                                ${project_path}\\TestCases\\SystemFeatures\\Data_Phrases\\Output\\Phrases_Save_Response.json
                                            </arg>
                                            <arg>${POSTPhraseSaveResp.content}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:36.796" html="yes" level="INFO">Created file '&lt;a
                                            href="file://C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Output\Phrases_Save_Response.json"&gt;C:\UTF\UTF\UOB_API_Auto\TestCases\SystemFeatures\Data_Phrases\Output\Phrases_Save_Response.json&lt;/a&gt;'.
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.797"
                                                starttime="20190807 10:58:36.793"></status>
                                    </kw>
                                    <kw name="Get Json Value" library="HttpLibraryExtended">
                                        <doc>Get the target node of the JSON document `json_string` specified by
                                            `json_pointer`.
                                        </doc>
                                        <arguments>
                                            <arg>${POSTPhraseSaveResp.content}</arg>
                                            <arg>/serviceResponseHeader/responseContext/responseDescription</arg>
                                        </arguments>
                                        <assign>
                                            <var>${responseDesc}</var>
                                        </assign>
                                        <msg timestamp="20190807 10:58:36.800" level="INFO">${responseDesc} = "Following
                                            fields are missing or invalid in the request : data.text,"
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.801"
                                                starttime="20190807 10:58:36.798"></status>
                                    </kw>
                                    <kw name="Set Test Variable" library="BuiltIn">
                                        <doc>Makes a variable available everywhere within the scope of the current
                                            test.
                                        </doc>
                                        <arguments>
                                            <arg>${responseDesc}</arg>
                                        </arguments>
                                        <msg timestamp="20190807 10:58:36.803" level="INFO">${responseDesc} = "Following
                                            fields are missing or invalid in the request : data.text,"
                                        </msg>
                                        <status status="PASS" endtime="20190807 10:58:36.804"
                                                starttime="20190807 10:58:36.802"></status>
                                    </kw>
                                    <status status="PASS" endtime="20190807 10:58:36.805"
                                            starttime="20190807 10:58:36.205"></status>
                                </kw>
                                <msg timestamp="20190807 10:58:36.805" level="INFO">Mx Execute Template With Multiple
                                    Data keyword passed for all the data
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:36.806"
                                        starttime="20190807 10:58:35.829"></status>
                            </kw>
                            <kw name="Should Be Equal As Strings" library="BuiltIn">
                                <doc>Fails if objects are unequal after converting them to strings.</doc>
                                <arguments>
                                    <arg>${POSTPhraseSaveResp.status_code}</arg>
                                    <arg>500</arg>
                                </arguments>
                                <msg timestamp="20190807 10:58:36.809" level="INFO">Argument types are:
                                    &lt;type 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" endtime="20190807 10:58:36.810"
                                        starttime="20190807 10:58:36.808"></status>
                            </kw>
                            <kw name="Should Be Equal As Strings" library="BuiltIn">
                                <doc>Fails if objects are unequal after converting them to strings.</doc>
                                <arguments>
                                    <arg>${responseDesc}</arg>
                                    <arg>"Following fields are missing or invalid in the request : data.text,"</arg>
                                </arguments>
                                <status status="PASS" endtime="20190807 10:58:36.813"
                                        starttime="20190807 10:58:36.811"></status>
                            </kw>
                            <status status="PASS" endtime="20190807 10:58:36.814" critical="yes"
                                    starttime="20190807 10:58:27.516"></status>
                        </test>
                        <status status="PASS" endtime="20190807 10:58:36.816"
                                starttime="20190807 10:57:53.570"></status>
                    </suite>
                    <status status="PASS" endtime="20190807 10:58:36.823" starttime="20190807 10:57:53.565"></status>
                </suite>
                <status status="PASS" endtime="20190807 10:58:36.828" starttime="20190807 10:57:53.561"></status>
            </suite>
            <status status="PASS" endtime="20190807 10:58:36.832" starttime="20190807 10:57:53.557"></status>
        </suite>
        <status status="PASS" endtime="20190807 10:58:36.841" starttime="20190807 10:57:53.526"></status>
    </suite>
    <statistics>
        <total>
            <stat fail="0" pass="4">Critical Tests</stat>
            <stat fail="0" pass="4">All Tests</stat>
        </total>
        <tag>
        </tag>
        <suite>
            <stat fail="0" id="s1" name="UOB API Auto" pass="4">UOB API Auto</stat>
            <stat fail="0" id="s1-s1" name="TestCases" pass="4">UOB API Auto.TestCases</stat>
            <stat fail="0" id="s1-s1-s1" name="SystemFeatures" pass="4">UOB API Auto.TestCases.SystemFeatures</stat>
            <stat fail="0" id="s1-s1-s1-s1" name="Data Phrases" pass="4">UOB API Auto.TestCases.SystemFeatures.Data
                Phrases
            </stat>
            <stat fail="0" id="s1-s1-s1-s1-s1" name="POST Phrase Save" pass="4">UOB API
                Auto.TestCases.SystemFeatures.Data Phrases.POST Phrase Save
            </stat>
        </suite>
    </statistics>
    <errors>
    </errors>
</robot>
